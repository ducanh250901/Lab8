{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + \"comments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    alert(\"Your comment could not be posted\\nErro: \" + error.message);\n  });\n};\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + \"dishes\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + \"promotions\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n  return fetch(baseUrl + \"leaders\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n    }\n\n    error.response = response;\n    throw error;\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\nexport const addLeaders = leaders => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => alert(\"Thank for submitting feedback!\" + JSON.stringify(response))).catch(error => {\n    console.log(\"post feedbacks\", error.message);\n    alert(\"Your feedback could not be posted!\\nError: \" + error.message);\n  });\n};","map":{"version":3,"sources":["C:/Users/nduca/OneDrive/Máy tính/Lab8/Lab8/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errmess","message","json","catch","alert","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFeedback","firstname","lastname","telnum","email","agree","contactType","newFeedback","console","log"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment,\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment,\n  };\n\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + \"comments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    credentials: \"same-origin\",\n  })\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((response) => dispatch(addComment(response)))\n    .catch((error) => {\n      alert(\"Your comment could not be posted\\nErro: \" + error.message);\n    });\n};\n\nexport const fetchDishes = () => (dispatch) => {\n  dispatch(dishesLoading(true));\n\n  return fetch(baseUrl + \"dishes\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((dishes) => dispatch(addDishes(dishes)))\n    .catch((error) => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING,\n});\n\nexport const dishesFailed = (errmess) => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess,\n});\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes,\n});\n\nexport const fetchComments = () => (dispatch) => {\n  return fetch(baseUrl + \"comments\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((comments) => dispatch(addComments(comments)))\n    .catch((error) => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess,\n});\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments,\n});\n\nexport const fetchPromos = () => (dispatch) => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((promos) => dispatch(addPromos(promos)))\n    .catch((error) => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING,\n});\n\nexport const promosFailed = (errmess) => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess,\n});\n\nexport const addPromos = (promos) => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos,\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n  dispatch(leadersLoading());\n  return fetch(baseUrl + \"leaders\")\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n        }\n        error.response = response;\n        throw error;\n      },\n      (error) => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((leaders) => dispatch(addLeaders(leaders)))\n    .catch((error) => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING,\n});\n\nexport const leadersFailed = (errmess) => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess,\n});\n\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders,\n});\n\nexport const postFeedback = (\n  firstname,\n  lastname,\n  telnum,\n  email,\n  agree,\n  contactType,\n  message\n) => (dispatch) => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message,\n  };\n\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"same-origin\",\n  })\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        throw error;\n      }\n    )\n    .then((response) => response.json())\n    .then((response) =>\n      alert(\"Thank for submitting feedback!\" + JSON.stringify(response))\n    )\n    .catch((error) => {\n      console.log(\"post feedbacks\", error.message);\n      alert(\"Your feedback could not be posted!\\nError: \" + error.message);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}